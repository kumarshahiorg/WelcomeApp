node {
   def mvnHome
   def tomcatHome
   def buildEnv
   stage('Environment Selection') {
      buildEnv=input message: '', parameters: [choice(choices: ['Development', 'Stage', 'Production Environment'], description: 'Which environment you are building?', name: 'buildEnv')]
      echo "Build Environment Selected is = ${buildEnv}"
    }
   stage('Code Checkout') {
    if("${buildEnv}".equalsIgnoreCase("Development")){
        tomcatHome="c:\\poc\\tomcat-dev\\webapps\\"
        checkout([$class: 'GitSCM', branches: [[name: '*/development']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'db5473d1-d595-4458-881a-2e5c5f41dfa1', url: 'https://github.com/kumarshahiorg/WelcomeApp.git']]])
    }else if("${buildEnv}".equalsIgnoreCase("Stage")){
        tomcatHome="c:\\poc\\tomcat-stage\\webapps\\"
        checkout([$class: 'GitSCM', branches: [[name: '*/stage']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'db5473d1-d595-4458-881a-2e5c5f41dfa1', url: 'https://github.com/kumarshahiorg/WelcomeApp.git']]])
      }            
    }
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
         sh "mvn -Dmaven.test.failure.ignore clean package"
      } else {
         withSonarQubeEnv ('SonarQubeDefault') {
            bat "mvn clean package"
         }
      }
   }
   stage('Unit Test') {
      bat "mvn test"
   }
   stage('Integration Test') {
     if (isUnix()) {
        sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean verify"
     } else {
        bat "mvn -Dmaven.test.failure.ignore clean verify"
     }
   }
   stage('Sonar') {
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' sonar:sonar"
      } else {
         bat "mvn sonar:sonar"
      }
   }
   /**stage ('Quality Gate') {
        timeout (time: 1, unit: 'HOURS') {
        def qg = waitForQualityGate ()
        print "${qg.status}"
        print "${qg}"
        if (qg.status!='OK') {
            error "Pipeline aborted due to quality gate failure: ${qg.status}"
            }
        }
    }**/
   stage('Deploy') {
      bat 'copy .\\target\\WelcomeApp.war '+"${tomcatHome}"+'WelcomeApp.war'
   }
   stage("Smoke Test"){
       bat "curl --retry-delay 10 --retry 5 http://localhost:8095/WelcomeApp/"
   }
   stage('Notify'){
       emailext body: '''Hi Team,
       Release has been done successfully.
       Thanks,
       - RTP Admin''', subject: 'Build Completion Notification', to: 'abhishek.shahi@gmail.com'
   }
}